Throwable   - Exception     - 일반적 Exception      - IOException
                                                    - InterruptException
                            - 실질적 Exception      - NullPointerException
                                                    - ArrayIndexOutOfBoundsException
            
            - Error         - ThreadDeath
                            - AssertionError
                            - VirtualMachineError

오류의 구분
예외(Exception) : 가벼운 오류이며 프로그램적으로 처리한다.
오류(Error) : 치명적인 오류이며, JVM에 의존하여 처리한다.


예외의 구분
- 일반적 예외 : 컴파일할 때 발생하는 오류이며 입출력에 관련해서 파일에 출력을 해야 하는데, 쓰고자 하는 파일이 존재하지 않는다는 예외
                (FileNotFoundException)와 시간제 프로그래밍을 하면서 순간 시스템으로 하여금 타이밍을 놓쳐 중단하는 예외(InterruptedException)
                등이 있다. 이는 컴파일할 때에 확인되므로 반드시 예외처리를 해야 컴파일이 된다. 
- 실행적 예외 : 실행하는 프로그램이 실행되다가 배열의 범위를 넘었을 때 발생하는 예외(ArrayIndexOfBoundsException). 특정 수를 0으로 나누기 
                했을 때 발생하는 예외(ArithmeticException)등이 있다. 한 마디로 프로그래머의 실수로 인한 예외라 할 수 있다. 실행할 때 발생하는 
                예외이므로 예외처리를 하지 않아도 컴파일에 무리는 없다.
--> 특별히 예외를 외우거나 구별하려고 노력을 할 필요는 없다. 왜냐하면 일반적인 예외들은 컴파일 시에 어떤 예외가 발생할 수 있으므로 예외에 대한 
    처리를 하라는 메시지가 나타난다.